name: CI checks

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
  push:
    branches:
      - master

env:
  RUSTFLAGS: "-D warnings"

## `actions-rs/toolchain@v1` overwrite set to false so that
## `rust-toolchain` is always used and the only source of truth.

jobs:
  test:
    if: github.event.pull_request.draft == false

    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # We don't need to test across multiple platforms yet
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --workspace --all-features
      - name: Check Benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: bench
          args: --verbose --workspace --all-features --no-run
      - name: Check Examples
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --example simple_circuit --verbose --release --all-features

  build:
    if: github.event.pull_request.draft == false

    name: Build target ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - wasm32-unknown-unknown
          - wasm32-wasi

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

  doc-links:
    if: github.event.pull_request.draft == false

    name: Intra-doc links
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      # Ensure intra-documentation links all resolve correctly
      # Requires #![deny(intra_doc_link_resolution_failure)] in crates.
      - name: Check intra-doc links
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --all-features

  fmt:
    if: github.event.pull_request.draft == false

    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    if: github.event.pull_request.draft == false

    name: Clippy lint checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
          components: clippy
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose --release --workspace --examples --tests --all-features
